##VERTEX
#version 330 core

layout(location = 0) in vec2 position;
layout(location = 1) in vec2 in_texture_coord;

out vec2 texture_coord;

uniform mat4 projection_matrix;
uniform mat4 model_matrix;

void main() {
    gl_Position = projection_matrix * model_matrix * vec4(position, 0.0, 1.0);
    texture_coord = in_texture_coord;
}

##FRAGMENT
#version 330 core

in vec2 texture_coord;

out vec4 out_colour;

uniform vec3 colour;
uniform sampler2D font_bitmap;

const float width = 0.5;
const float edge = 0.1;

float smoothly_step(float edge0, float edge1, float x){
    float t = clamp((x - edge0) / (edge1 - edge0), 0.0, 1.0);
    return t * t * (3.0 - 2.0 * t);
}

void main() {
    float distance = 1.0 - texture(font_bitmap, texture_coord).a;
    float alpha = 1.0 - smoothly_step(width, width + edge, distance);


    out_colour = vec4(colour, alpha);

}

